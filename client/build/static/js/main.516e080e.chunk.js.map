{"version":3,"sources":["actions/token_stats.js","logo.svg","actions/account_stats.js","actions/block_stats.js","actions/user_input_stats.js","store/configureStore.js","utils/ObjectUtils.js","components/landing/Landing.js","components/landing/LandingContainer.js","components/nav/TopNavBar.js","components/nav/TopNavBarContainer.js","components/nav/BottomNavBar.js","components/pages/token/ViewToken.js","components/pages/token/ViewTokenContainer.js","components/pages/block/ViewBlock.js","components/pages/block/ViewBlockContainer.js","components/pages/account/ViewAccount.js","components/pages/account/ViewAccountContainer.js","components/pages/transaction/ViewTransaction.js","components/pages/transaction/ViewTransactionContainer.js","components/pages/contract/ViewContract.js","components/pages/contract/ViewContractContainer.js","App.js","serviceWorker.js","index.js","reducers/ethereum_stats.js","reducers/user_input_stats.js","reducers/block_stats.js","reducers/token_stats.js","reducers/transaction_stats.js","reducers/account_stats.js","reducers/index.js","store/configureStore.dev.js","actions/transaction_stats.js","actions/ethereum_stats.js"],"names":["__webpack_require__","d","__webpack_exports__","FETCH_TOKEN_DETAILS","FETCH_TOKEN_DETAILS_SUCCESS","FETCH_TOKEN_DETAILS_FAILURE","FETCH_TOKEN_INTRO","FETCH_TOKEN_INTRO_SUCCESS","FETCH_TOKEN_INTRO_FAILURE","fetchTokenDetails","fetchTokenDetailsSuccess","fetchTokenDetailsFailure","fetchTokenIntro","fetchTokenIntroSuccess","fetchTokenIntroFailure","queryTokenDailyTransactions","stopQueryTokenDailyTransactions","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","QUERY_TOKEN_DAILY_TRANSACTIONS","token","request","axios","get","concat","type","payload","response","error","err","module","exports","p","GET_ACCOUNT_DETAILS","GET_ACCOUNT_DETAILS_SUCCESS","GET_ACCOUNT_DETAILS_FAILURE","GET_ACCOUNT_CURRENT_TRANSACTIONS","GET_ACCOUNT_CURRENT_TRANSACTIONS_SUCCESS","GET_ACCOUNT_CURRENT_TRANSACTIONS_FAILURE","CLEAR_ACCOUNT_DETAILS","getAccountDetails","getAccountDetailsSuccess","getAccountDetailsFailure","getAccountCurrentTransactions","getAccountCurrentTransactionsSuccess","getAccountCurrentTransactionsFailure","getAccountDayTransactions","getAccountDayTransactionsSuccess","getAccountDayTransactionsFailure","queryAccountDayTransactions","clearAccountDetails","GET_ACCOUNT_DAY_TRANSACTIONS","GET_ACCOUNT_DAY_TRANSACTIONS_SUCCESS","GET_ACCOUNT_DAY_TRANSACTIONS_FAILURE","QUERY_ACCOUNT_DAY_TRANSACTIONS","address","GET_BLOCK_INTRO","GET_BLOCK_INTRO_SUCCESS","GET_BLOCK_INTRO_FAILURE","GET_BLOCK_DETAILS","GET_BLOCK_DETAILS_SUCCESS","GET_BLOCK_DETAILS_FAILURE","getBlockIntro","getBlockIntroSuccess","getBlockIntroFailure","getBlockDetails","getBlockDetailsSuccess","getBlockDetailsFailure","blockNumber","GET_USER_INPUT_STATS","GET_USER_INPUT_STATS_SUCCESS","GET_USER_INPUT_STATS_FAILURE","GET_SEARCH_STRING_TYPE","GET_SEARCH_STRING_TYPE_SUCCESS","getUserInputStats","getUserInputStatsSuccess","getUserInputStatsFailure","getSearchStringType","getSearchStringTypeSuccess","getSearchStringTypeFailure","GET_SEARCH_STRING_TYPE_FAILURE","searchString","require","isNonEmptyArray","arr","length","isEmptyArray","isEmptyObject","obj","Object","keys","isNonEmptyObject","Landing","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tick","bind","assertThisInitialized","state","blockState","latestBlock","getEthereumNetStats","getHourlyTransactionStats","timer","setInterval","blockData","etherStats","top","setState","clearInterval","clearEthereumData","nextProps","_this$props","_this$props$etherStat","hourlyTransactionStats","_this$state","_this$state$blockStat","latestBlockTransactions","pendingBlockTransactions","latestTxnsList","react_default","a","createElement","className","pendingTxnsList","latestBlockStats","Landing_LatestBlockStats","graphData","map","item","x","date","y","transactions","Row","Col","lg","Link","to","hash","from","gas","gasPrice","value","Grid","victory_chart","minDomain","padding","bottom","width","height","victory_line","style","data","stroke","victory_axis","label","axis","dependentAxis","Component","LatestBlockStats","_this$props2","xs","gasUsed","extraData","numTxns","moment","unix","timestamp","format","size","unclesMined","miner","connect","dispatch","fetchEtherumData","then","status","fetchEtherumDataSuccess","fetchEthereumDataFailure","getHourlyTransactionStatsSuccess","getHourlyTransactionStatsFailure","TopNavBar","searchVal","submitUserSearchTerm","searchTermChanged","e","target","preventDefault","str","searchStringType","userInputStats","history","push","handleSubmit","fluid","Navbar","collapseOnSelect","Header","Brand","src","Toggle","name","onSubmit","FormControl","placeHolder","onChange","onClick","withRouter","res","getUsetInputStats","BottomNavBar","ViewToken","params","match","tokenDetails","tokenStats","getTokenDetails","getTokenIntro","_nextProps$tokenStats","tokenIntro","nextToken","_this$props$tokenStat","tokenIntroBlock","tokenHistoryData","txPerHour","ViewToken_TokenIntro","contractTxnList","detailsBlock","console","log","totalTransactions","verifiedTransactions","totalGasUsed","totalLogs","sort","b","block","number","idx","itemStatus","receipt","transaction","TokenIntro","symbol","totalSupply","contract","tokenDetailResponse","ViewBlock","_this$props$blockStat","blockStats","blockIntro","blockDetails","blockInfo","ViewBlock_BlockInfo","blockTxnList","transactionDetails","txStatus","cumulativeGasUsed","BlockInfo","gasLimit","nonce","parentHash","ViewAccount","transactionView","account","_this$props$accountSt","accountStats","accountDetails","accountCurrentTransactions","accountBalances","filter","balance","Number","balanceItem","currentTransactionView","ViewAccount_LatestTransactionView","LatestTransactionView","_this$props$accountCu","latest","pending","pendingTxList","latestTxList","ViewAccount_AccountTransaction","AccountTransaction","accountNumber","ViewTransaction","getTransactionDetails","resetTransactionDetails","transactionStats","transactionDetail","ViewTransaction_TransactionDetail","TransactionDetail","isTxonfirmed","transactionLogs","isContractCreation","contractAddress","logs","topics","t","transactionIndex","numConfirmations","getTransactionDetailsSuccess","getTransactionDetailsFailure","ViewContract","ViewContract_TokenIntro","App","BrowserRouter","TopNavBarContainer","Route","exact","path","component","LandingContainer","ViewTokenContainer","ViewBlockContainer","ViewAccountContainer","ViewTransactionContainer","ViewContractContainer","BottomNavBar_BottomNavBar","Boolean","window","location","hostname","store","configureStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","dailyTransactionStats","dataFetched","isFetching","success","userInputData","rootReducer","combineReducers","arguments","undefined","action","FETCH_ETHEREUM_DATA","objectSpread","FETCH_ETHEREUM_DATA_SUCCESS","FETCH_ETHEREUM_DATA_FAILURE","GET_HOURLY_TRANSACTION_STATS","GET_HOURLY_TRANSACTION_STATS_SUCCESS","GET_HOURLY_TRANSACTION_STATS_FAILURE","CLEAR_ETHEREUM_DATA","GET_TRANSACTION_DETAILS","GET_TRANSACTION_DETAILS_SUCCESS","GET_TRANSACTION_DETAILS_FAILURE","RESET_TRANSACTION_DETAILS","compose","applyMiddleware","promise","devToolsExtension","f","createStore","finalCreateStore","index","txHash"],"mappings":"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","file":"static/js/main.516e080e.chunk.js","sourcesContent":["import axios from 'axios';\nexport const FETCH_TOKEN_DETAILS = 'FETCH_TOKEN_DETAILS';\nexport const FETCH_TOKEN_DETAILS_SUCCESS = 'FETCH_TOKEN_DETAILS_SUCCESS';\nexport const FETCH_TOKEN_DETAILS_FAILURE = 'FETCH_TOKEN_DETAILS_FAILURE';\n\nexport const FETCH_TOKEN_INTRO = 'FETCH_TOKEN_INTRO';\nexport const FETCH_TOKEN_INTRO_SUCCESS = 'FETCH_TOKEN_INTRO_SUCCESS';\nexport const FETCH_TOKEN_INTRO_FAILURE = 'FETCH_TOKEN_INTRO_FAILURE';\n\nexport const QUERY_TOKEN_DAILY_TRANSACTIONS = 'QUERY_TOKEN_DAILY_TRANSACTIONS';\nexport const STOP_QUERY_TOKEN_DAILY_TRANSACTIONS = 'STOP_QUERY_TOKEN_DAILY_TRANSACTIONS';\n\nexport function fetchTokenDetails(token) {\n  const request = axios.get(`/api/token_details?token=${token}`);\n  return {\n    type: FETCH_TOKEN_DETAILS,\n    payload: request\n  }\n}\n\nexport function fetchTokenDetailsSuccess(response) {\n  return {\n    type: FETCH_TOKEN_DETAILS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function fetchTokenDetailsFailure(error) {\n  return {\n    type: FETCH_TOKEN_DETAILS_FAILURE,\n    payload: error\n  }\n}\n\nexport function fetchTokenIntro(token) {\n  const request = axios.get(`/api/token_intro?token=${token}`)\n  return {\n    type: FETCH_TOKEN_INTRO,\n    payload: request\n  }\n}\n\nexport function fetchTokenIntroSuccess(response) {\n  return {\n    type: FETCH_TOKEN_INTRO_SUCCESS,\n    payload: response\n  }\n}\n\nexport function fetchTokenIntroFailure(err) {\n  return {\n    type: FETCH_TOKEN_INTRO_FAILURE,\n    payload: err\n  }\n}\n\nexport function getTokenCurrentTransactions() {\n  return {\n    \n  }\n}\n\nexport function getTokenCurrentTransactionsSuccess() {\n  return {\n    \n  }\n}\n\nexport function getTokenCurrentTransactionsFailure() {\n  return {\n    \n  }\n}\n\nexport function queryTokenDailyTransactions(token) {\n  const request = axios.get(`/api/query_token_daily_transactions?search=${token}`);\n  return {\n    type: QUERY_TOKEN_DAILY_TRANSACTIONS,\n    payload: request\n  }\n}\n\nexport function stopQueryTokenDailyTransactions(token) {\n  const request = axios.get(`/api/stop_query_token_daily_transactions?search=${token}`);\n  return {\n    type: QUERY_TOKEN_DAILY_TRANSACTIONS,\n    payload: request\n  }\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nexport const GET_ACCOUNT_DETAILS = 'GET_ACCOUNT_DETAILS';\nexport const GET_ACCOUNT_DETAILS_SUCCESS = 'GET_ACCOUNT_DETAILS_SUCCESS';\nexport const GET_ACCOUNT_DETAILS_FAILURE = 'GET_ACCOUNT_DETAILS_FAILURE';\n\nexport const GET_ACCOUNT_CURRENT_TRANSACTIONS = 'GET_ACCOUNT_CURRENT_TRANSACTIONS';\nexport const GET_ACCOUNT_CURRENT_TRANSACTIONS_SUCCESS = 'GET_ACCOUNT_CURRENT_TRANSACTIONS_SUCCESS';\nexport const GET_ACCOUNT_CURRENT_TRANSACTIONS_FAILURE = 'GET_ACCOUNT_CURRENT_TRANSACTIONS_FAILURE';\n\nexport const GET_ACCOUNT_DAY_TRANSACTIONS = 'GET_ACCOUNT_DAY_TRANSACTIONS';\nexport const GET_ACCOUNT_DAY_TRANSACTIONS_SUCCESS = 'GET_ACCOUNT_DAY_TRANSACTIONS_SUCCESS';\nexport const GET_ACCOUNT_DAY_TRANSACTIONS_FAILURE = 'GET_ACCOUNT_DAY_TRANSACTIONS_FAILURE';\n\nexport const QUERY_ACCOUNT_DAY_TRANSACTIONS = 'QUERY_ACCOUNT_DAY_TRANSACTIONS';\n\nexport const CLEAR_ACCOUNT_DETAILS = 'CLEAR_ACCOUNT_DETAILS';\n\nexport function getAccountDetails(address) {\n\n  const request = axios.get(`/api/account_details?search=${address}`);\n  return {\n    type: GET_ACCOUNT_DETAILS,\n    payload: request\n  }\n}\n\nexport function getAccountDetailsSuccess(response) {\n  return {\n    type: GET_ACCOUNT_DETAILS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getAccountDetailsFailure(error) {\n  return {\n    type: GET_ACCOUNT_DETAILS_FAILURE,\n    payload: error\n  }\n}\n\nexport function getAccountCurrentTransactions(address) {\n  const request = axios.get(`/api/account_current_transactions?search=${address}`);\n  return {\n    type: GET_ACCOUNT_CURRENT_TRANSACTIONS,\n    payload: request\n  }\n}\n\nexport function getAccountCurrentTransactionsSuccess(response) {\n  return {\n    type: GET_ACCOUNT_CURRENT_TRANSACTIONS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getAccountCurrentTransactionsFailure(error){\n  return {\n    type: GET_ACCOUNT_CURRENT_TRANSACTIONS_FAILURE,\n    payload: error\n  }\n}\n\nexport function getAccountDayTransactions(address) {\n  const request = axios.get(`/api/account_daily_transactions?search=${address}`);\n  return {\n    type: GET_ACCOUNT_DAY_TRANSACTIONS,\n    payload: request\n  }\n}\n\nexport function getAccountDayTransactionsSuccess(response) {\n  return {\n    type: GET_ACCOUNT_DAY_TRANSACTIONS_SUCCESS,\n    payload: response\n  }  \n}\n\nexport function getAccountDayTransactionsFailure(error) {\n  return {\n    type: GET_ACCOUNT_DAY_TRANSACTIONS_FAILURE,\n    payload: error\n  }\n}\n\nexport function queryAccountDayTransactions(address) {\n  const request = axios.get(`/api/query_account_day_transactions?search=${address}`)\n  return {\n    type: QUERY_ACCOUNT_DAY_TRANSACTIONS,\n    payload: request\n  }\n}\n\nexport function clearAccountDetails() {\n  return {\n    type: CLEAR_ACCOUNT_DETAILS\n  }\n}","import axios from 'axios';\n\nexport const GET_BLOCK_INTRO = 'GET_BLOCK_INTRO';\nexport const GET_BLOCK_INTRO_SUCCESS = 'GET_BLOCK_INTRO_SUCCESS';\nexport const GET_BLOCK_INTRO_FAILURE = 'GET_BLOCK_INTRO_FAILURE';\n\nexport const GET_BLOCK_DETAILS = 'GET_BLOCK_DETAILS';\nexport const GET_BLOCK_DETAILS_SUCCESS = 'GET_BLOCK_DETAILS_SUCCESS';\nexport const GET_BLOCK_DETAILS_FAILURE = 'GET_BLOCK_DETAILS_FAILURE';\n\nexport function getBlockIntro(blockNumber) {\n  const request = axios.get(`/api/block_intro?search=${blockNumber}`);\n  return {\n    type: GET_BLOCK_INTRO,\n    payload: request\n  }\n}\n\nexport function getBlockIntroSuccess(response) {\n  return {\n    type: GET_BLOCK_INTRO_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getBlockIntroFailure(error) {\n  return {\n    type: GET_BLOCK_INTRO_FAILURE,\n    payload: error\n  }\n}\n\nexport function getBlockDetails(blockNumber) {\n  const request = axios.get(`/api/block_details?search=${blockNumber}`);\n  return {\n    type: GET_BLOCK_DETAILS,\n    payload: request\n  }\n}\n\nexport function getBlockDetailsSuccess(response) {\n  return {\n    type: GET_BLOCK_DETAILS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getBlockDetailsFailure(error) {\n  return {\n    type: GET_BLOCK_DETAILS_FAILURE,\n    payload: error\n  }\n}","import axios from 'axios';\n\nexport const GET_USER_INPUT_STATS = 'GET_USER_INPUT_STATS';\nexport const GET_USER_INPUT_STATS_SUCCESS = 'GET_USER_INPUT_STATS_SUCCESS';\nexport const GET_USER_INPUT_STATS_FAILURE = 'GET_USER_INPUT_STATS_FAILURE';\n\nexport const GET_SEARCH_STRING_TYPE = 'GET_SEARCH_STRING_TYPE';\nexport const GET_SEARCH_STRING_TYPE_SUCCESS = 'GET_SEARCH_STRING_TYPE_SUCCESS';\nexport const GET_SEARCH_STRING_TYPE_FAILURE = 'GET_SEARCH_STRING_TYPE_FAILURE';\n\n\n\nexport function getUserInputStats(searchString) {\n  const request = axios.get(`/api/user_input_stats?search=${searchString}`);\n  return {\n    type: GET_USER_INPUT_STATS,\n    payload: request\n  }\n}\n\nexport function getUserInputStatsSuccess(response) {\n  return {\n    type: GET_USER_INPUT_STATS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getUserInputStatsFailure(err) {\n  return {\n    type: GET_USER_INPUT_STATS_FAILURE,\n    payload: err\n  }\n}\n\nexport function getSearchStringType(searchString) {\n  const request = axios.get(`/api/search_string_type?search=${searchString}`);\n  return {\n    type: GET_SEARCH_STRING_TYPE,\n    payload: request\n  }\n}\n\nexport function getSearchStringTypeSuccess(response) {\n  return {\n    type: GET_SEARCH_STRING_TYPE_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getSearchStringTypeFailure(error) {\n  return {\n    type: GET_SEARCH_STRING_TYPE_FAILURE,\n    payload: error\n  }\n}","module.exports = require('./configureStore.dev');","export function isNonEmptyArray(arr) {\n  if (arr === null || typeof arr === \"undefined\" || arr.length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isEmptyArray(arr) {\n  if (arr === null || typeof arr === \"undefined\" || arr.length === 0) {\n    return true;\n  }\n  return false;\n}\n\nexport function isNonEmptyString(str) {\n  if (str !== null && typeof(str) !== \"undefined\" && str.length !== 0) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj) {\n  if (obj === null || typeof obj === \"undefined\" || Object.keys(obj).length === 0) {\n    return true;\n  }\n  return false;\n}\n\nexport function isNonEmptyObject(obj) {\n  if (obj === null || typeof obj === \"undefined\" || Object.keys(obj).length === 0) {\n    return false;\n  }\n  return true;\n}","import React, {Component} from 'react';\nimport './landing.scss';\nimport {Grid, Row, Col} from 'react-bootstrap';\nimport {isNonEmptyArray, isEmptyObject} from '../../utils/ObjectUtils';\nimport {VictoryChart, VictoryLine, VictoryAxis} from 'victory';\n\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\n\nexport default class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.tick = this.tick.bind(this);\n        this.state = {\"blockState\": {latestBlock: {}}};\n    }\n    componentWillMount() {\n        this.props.getEthereumNetStats();\n        this.props.getHourlyTransactionStats();    \n        this.timer = setInterval(this.tick, 3000);\n        const {etherStats:{blockData}} = this.props;\n        if (blockData && blockData.top) {\n            this.setState({blockState: blockData});\n        }\n    }\n    \n    componentWillUnmount(){\n          clearInterval(this.timer);\n          this.props.clearEthereumData();\n    }\n    \n    tick() {\n        this.props.getEthereumNetStats(); \n    }\n    \n    componentWillReceiveProps(nextProps) {\n        const {etherStats:{blockData}} = nextProps;\n        if (blockData && blockData.top !== this.props.etherStats.blockData.top) {\n            this.setState({blockState: blockData});\n        }\n    }\n    \n    render() {\n        const {etherStats, etherStats: {hourlyTransactionStats, blockData}} = this.props;\n        const {blockState: {latestBlock, latestBlockTransactions, pendingBlockTransactions, top}, blockState} = this.state;\n        let latestTxnsList = <i className=\"fa fa-spin fa-spinner loading-indicator\"/>;\n        let pendingTxnsList = <i className=\"fa fa-spin fa-spinner loading-indicator\"/>;\n        let  latestBlockStats = <i className=\"fa fa-spin fa-spinner loading-indicator\"/>;\n        if (!isEmptyObject(latestBlock)) {\n            latestBlockStats = <LatestBlockStats latestBlock={latestBlock} blockData={blockData}/>\n        }   \n\n        let graphData = [];\n        if (isNonEmptyArray(hourlyTransactionStats)) {\n          graphData = hourlyTransactionStats.map(function(item){\n            return {\"x\": item.date, \"y\": item.transactions}\n        })\n        }\n        if (isNonEmptyArray(latestBlockTransactions)) {\n            latestTxnsList = latestBlockTransactions.map(function(item){\n            \n                return ( \n                <Row className=\"block-cell-subrow\">\n                <Col lg={12}>\n                    <div className=\"transaction-address-block\">\n                        <span className=\"address-card-label\">Transaction Hash: </span>\n                        <span className=\"address-card-value\"><Link to={`/transaction/${item.hash}`}>{item.hash}</Link></span>\n                    </div>   \n                </Col>\n                <Col lg={12}>\n                <Col lg={5}>\n                    <div className=\"transaction-address-block\">\n                        <span className=\"address-card-label\">Sender: </span>\n                        <span className=\"address-card-value\"><Link to={`/account/${item.from}`}>{item.from}</Link></span>\n                    </div>                \n                </Col>\n                <Col lg={5}>\n                    <div className=\"transaction-address-block\">\n                        <span className=\"address-card-label\">Receiver: </span>\n                        <span className=\"address-card-value\"><Link to={`/account/${item.from}`}>{item.to}</Link></span>\n                    </div>\n                </Col>\n                <Col lg={2}>\n                \n                </Col>\n                </Col>\n                <Col lg={12}>\n                    <Col lg={2}>\n                        <div className=\"display-card-block\">\n                            <span className=\"display-card-label\">Gas Limit: </span>\n                            <span className=\"display-card-value\"> {item.gas}</span>\n                        </div>\n                    </Col>\n                    <Col lg={3}>\n                        <div className=\"display-card-block\">\n                            <span className=\"display-card-label\">Gas Price: </span>\n                            <span className=\"display-card-value\">{item.gasPrice}</span>\n                        </div>                    \n                    </Col>\n                    <Col lg={3}>\n                        <div className=\"display-card-block\">\n                            <span className=\"display-card-label\">Value: </span>\n                            <span className=\"display-card-value\">{item.value}</span>\n                        </div>  \n                    </Col>\n                </Col>\n                </Row>)\n            })\n        }\n        if (isNonEmptyArray(pendingBlockTransactions)) {\n            pendingTxnsList = pendingBlockTransactions.map(function(item){\n                return ( \n                <Row className=\"block-cell-subrow\">\n                <Col lg={12}>\n                <Col lg={5}>\n                    <div className=\"transaction-address-block\">\n                        <span className=\"address-card-label\">Sender: </span>\n                        <span className=\"address-card-value\"><Link to={`/account/${item.from}`}>{item.from}</Link></span>\n                    </div>\n                </Col>\n                <Col lg={5}>\n                    <div className=\"transaction-address-block\">\n                        <span className=\"address-card-label\">Receiver: </span>\n                        <span className=\"address-card-value\"><Link to={`/account/${item.from}`}>{item.to}</Link></span>\n                    </div>\n                </Col>\n                <Col lg={2}>\n                \n                </Col>\n                </Col>\n                <Col lg={12}>\n                    <Col lg={2}>\n                        <div className=\"display-card-block\">\n                            <span className=\"display-card-label\">Gas Limit: </span>\n                            <span className=\"display-card-value\"> {item.gas}</span>\n                        </div>\n                    </Col>\n                    <Col lg={3}>\n                        <div className=\"display-card-block\">\n                            <span className=\"display-card-label\">Gas Price: </span>\n                            <span className=\"display-card-value\">{item.gasPrice}</span>\n                        </div>  \n                    </Col>\n                    <Col lg={4}>\n                        <div className=\"display-card-block\">\n                            <span className=\"display-card-label\">Value: </span>\n                            <span className=\"display-card-value\">{item.value}</span>\n                        </div>  \n                    </Col>\n                </Col>\n                </Row>)\n            })\n        }\n        return (\n            <Grid>\n                <Row>\n                    <Col lg={8}>\n                    <div className=\"display-row-header\">Current Default Block</div>\n                    </Col>\n\n                    <Col lg={4}>\n                    <div className=\"display-row-header\">Txns/hr (24 hrs)</div>\n                    </Col>\n                </Row>\n                <Row className=\"\">\n                    <Col lg={8} className=\"display-card-row top-row-card\">\n                        {latestBlockStats}\n                    </Col>\n\n                    <Col lg={4} className=\"display-card-row top-row-card\">\n                    <VictoryChart minDomain={{ y: 10000 }} padding={{ top: 20, bottom: 60 }}\n                                  width={600} height={300}>\n                      <VictoryLine\n                        style={{\n                          data: { stroke: \"#FFFC19\" },\n\n                    \n                        }}\n                        data={graphData}\n                      />\n                      <VictoryAxis\n                      label=\"Time (hr)\"\n \n                        style={{\n                            axis: {stroke: \"#FFFC19\"},\n                          }}\n                    />\n                    <VictoryAxis dependentAxis\n                            style={{\n                            axis: {stroke: \" #FFFC19\"}\n                          }}/>\n                    </VictoryChart>\n                    </Col>\n                </Row>\n                <Row>\n                 <Col lg={12}>\n                    <div className=\"display-row-header\">Transactions in Current Block {top}</div>\n                </Col>\n                </Row>\n                <Row className=\"display-card-row\">\n                    <Col lg={12} className=\"txn-list-container\">\n                        {latestTxnsList}\n                    </Col>\n                </Row>\n                <Row>\n                 <Col lg={12}>\n                    <div className=\"display-row-header\">Pending Transactions {top ? (top + 1) : \"\"}</div>\n                </Col>\n                </Row>\n                <Row className=\"display-card-row\">\n                    <Col lg={12} className=\"txn-list-container\">\n                        {pendingTxnsList}\n                    </Col>\n                </Row>\n            </Grid>\n        )\n    }\n}\n\nclass LatestBlockStats extends Component {\n    render() {\n        const {latestBlock, blockData} = this.props;\n        return (\n            <div>\n                <Col lg={3} xs={6}>\n                    <div className=\"display-card-block\">\n                        <div className=\"display-card-value\">\n                            <Link to={`/block/${latestBlock.blockNumber}`}>{latestBlock.blockNumber}</Link>\n                        </div>\n                        <div className=\"display-card-label\">Block Number</div> \n                    </div>\n                    <div className=\"display-card-block\">\n                         <div className=\"display-card-value\">{latestBlock.gasUsed}</div>\n                         <div className=\"display-card-label\">Gas Used</div>\n                    </div>\n                </Col>\n                <Col lg={3} xs={6}>\n                    <div className=\"display-card-block\">\n                        <div className=\"display-card-value\">{latestBlock.extraData ? latestBlock.extraData: \"\"}</div>\n                        <div className=\"display-card-label\">Extra Data </div>\n                    </div>\n                    <div className=\"display-card-block\">\n                        <div className=\"display-card-value\">{latestBlock.numTxns}</div>\n                       <div className=\"display-card-label\"> Number of Txns</div> \n                    </div>\n\n                </Col>\n                <Col lg={3} xs={6}>\n                    <div className=\"display-card-block\">\n                       <div className=\"display-card-value\">{moment.unix(latestBlock.timestamp).format(\"HH:mm:ss\")}</div>\n                       <div className=\"display-card-label\"> Confirmed At </div>\n                    </div>\n                    <div className=\"display-card-block\">\n                       <div className=\"display-card-value\"> {latestBlock.size}</div>\n                       <div className=\"display-card-label\"> Block Size </div>\n                    </div>\n                </Col>\n                <Col lg={3} xs={6}>\n                    <div className=\"display-card-block\">\n                       <div className=\"display-card-value\">{blockData.gasPrice}</div>\n                       <div className=\"display-card-label\"> Gas Price </div>\n                    </div>\n                    <div className=\"display-card-block\">\n                       <div className=\"display-card-value\"> {latestBlock.unclesMined}</div>\n                       <div className=\"display-card-label\"> Uncles Mined </div>\n                    </div>\n                </Col>\n                <Col lg={12}>\n                    <div className=\"display-card-block miner-address-block\">\n                        <span className=\"address-card-label\">Miner Address: </span>\n                        <span className=\"address-card-value\">\n                            <Link to={`/account/${latestBlock.miner}`}>{latestBlock.miner}</Link>\n                        </span>\n                    </div>\n                </Col>            \n            </div>\n            \n            )\n    }\n}","import Landing from './Landing';\nimport {fetchEtherumData, fetchEtherumDataSuccess, fetchEthereumDataFailure, getHourlyTransactionStats, getHourlyTransactionStatsSuccess,\n  getHourlyTransactionStatsFailure, clearEthereumData\n} from '../../actions/ethereum_stats.js';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    etherStats: state.etherStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getEthereumNetStats: () => {\n      dispatch(fetchEtherumData()).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(fetchEtherumDataSuccess(response.payload.data));\n        } else {\n          dispatch(fetchEthereumDataFailure(response.payload.error))\n        }\n      });\n    },\n    getHourlyTransactionStats: () => {\n      dispatch(getHourlyTransactionStats()).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(getHourlyTransactionStatsSuccess(response.payload.data));\n        } else {\n          dispatch(getHourlyTransactionStatsFailure(response.payload.error));\n        }\n      });\n    },\n    clearEthereumData: () => {\n      dispatch(clearEthereumData());\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Landing);\n","import React, {Component} from 'react';\nimport {Grid, Row, Col, Navbar, Nav, Button, FormControl} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport {isNonEmptyString} from '../../utils/ObjectUtils';\nimport './navbar.scss';\nimport {withRouter} from 'react-router-dom';\n\nclass TopNavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {searchVal: \"\"}\n        this.submitUserSearchTerm = this.submitUserSearchTerm.bind(this);\n        this.searchTermChanged = this.searchTermChanged.bind(this);\n    }\n    \n    searchTermChanged(e) {\n        this.setState({searchVal: e.target.value})\n    }\n    submitUserSearchTerm(e) {\n        e.preventDefault();\n        this.props.getSearchStringType(this.state.searchVal);\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        const {userInputStats: {searchStringType}, history} = nextProps;\n        const {searchVal} = this.state;\n        if (isNonEmptyString(searchStringType) && searchStringType !== \"invalid\" && \n            searchStringType !== this.props.userInputStats.searchStringType) {\n            history.push(`/${searchStringType}/${searchVal}`);\n        }\n    }\n    \n    render() {\n        const {handleSubmit} = this.props;\n        return (\n            <Grid fluid className=\"landing-container\">\n              <Navbar className=\"tp-top-nav\" collapseOnSelect>\n                  <Row>\n                  <Col lg={3}>\n                    <Navbar.Header>\n                        <Navbar.Brand className=\"top-img-header\">\n                            <img src={\"logo.png\"} className=\"logo-img-container\"/>\n                            <Link to=\"/\" className=\"label-container\">OpenExploreum</Link>\n                        </Navbar.Brand>\n                        <Navbar.Toggle />\n                    </Navbar.Header>\n                    </Col>\n                    <Col lg={8}>\n                    <div>\n                        <form name=\"UserSearchForm\" onSubmit={this.submitUserSearchTerm}>\n                          <FormControl name=\"userSearch\"  placeHolder=\"Enter Wallet Address,  Contract Address, Txn #, Block or Symbol\"\n                            value={this.state.searchVal} onChange={this.searchTermChanged} className=\"seach-txn-input\"/>\n                            <i className=\"fas fa-search search-txn-icon\" onClick={this.submitUserSearchTerm}/>\n                        </form>\n                    </div>\n                    </Col>\n                    </Row>\n         \n\n              </Navbar>\n            </Grid>\n            )\n    }\n}\n\nexport default withRouter(TopNavBar);","import TopNavBar from './TopNavBar';\n\nimport {getUserInputStats, getUserInputStatsSuccess, getUserInputStatsFailure, getSearchStringType, \n  getSearchStringTypeSuccess, getSearchStringTypeFailure\n} from '../../actions/user_input_stats.js';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    etherStats: state.etherStats,\n    userInputStats: state.userInputStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSearchStringType: (searchString) => {\n      dispatch(getSearchStringType(searchString)).then(function(res){\n        if (res.payload.status === 200) {\n          dispatch(getSearchStringTypeSuccess(res.payload.data));\n        } else {\n          dispatch(getSearchStringTypeFailure(res.payload.error));\n        }\n      })\n    },\n    getUsetInputStats: (searchString) => {\n       dispatch(getUserInputStats(searchString)).then(function(res){\n         if (res.payload.status === 200) {\n           dispatch(getUserInputStatsSuccess(res.payload.data));\n         } else {\n           dispatch(getUserInputStatsFailure(res.payload.error));\n         }\n       })\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TopNavBar);","import React, {Component} from 'react';\nimport {Grid, Row, Col} from 'react-bootstrap';\n\nexport default class BottomNavBar extends Component {\n  render() {\n    return (\n      <Grid fluid className=\"landing-container bottom-nav-container\">\n        <Row className=\"bottom-nav-row\">\n          <Col lg={1}>\n            Privacy Policy\n          </Col>\n          <Col lg={1}>\n            Terms Of Use\n          </Col>\n          <Col lg={2}>\n            Dontate\n          </Col>\n          <Col lg={2}>\n            Github\n          </Col>\n          <Col lg={4}>\n          \n          </Col>\n          <Col lg={2}>\n            &copy; Tokenplex LLC\n          </Col>\n        </Row>\n      </Grid>\n      )\n  }\n}","import React, {Component} from 'react';\nimport {Grid, Row, Col} from 'react-bootstrap';\nimport {isEmptyObject, isNonEmptyArray, isNonEmptyObject} from '../../../utils/ObjectUtils';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport {VictoryChart, VictoryLine, VictoryAxis} from 'victory';\nimport {Link} from 'react-router-dom';\nimport '../pages.scss';\nimport moment from 'moment';\n\nexport default class ViewToken extends Component {\n  constructor(props) {\n    super(props);\n    this.tick = this.tick.bind(this);\n  }\n  \n  tick() {\n    const {match: {params}, tokenStats :{tokenDetails}} = this.props;\n    const token = params[0];\n    if (isEmptyObject(tokenDetails)) {\n      this.props.getTokenDetails(token);\n    }\n  }\n    \n  componentWillMount() {\n    const {match: {params}} = this.props;\n    const token = params[0];\n    this.props.getTokenIntro(token);\n    this.props.queryTokenDailyTransactions(token);\n    this.props.getTokenDetails(token);\n    this.timer = setInterval(this.tick, 5000);\n  }\n  componentWillUnmount() {\n    const {match: {params}} = this.props;\n    const token = params[0];\n    clearInterval(this.timer);\n    this.props.stopQueryTokenDailyTransactions(token);\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    const {match: {params}, tokenStats :{tokenIntro, tokenDetails}} = nextProps;\n    const nextToken = params[0];\n\n    if (isNonEmptyObject(tokenDetails)) {\n      clearInterval(this.timer);\n      this.timer = 0;\n    }\n    if (nextToken !== this.props.match.params[0]) {\n      this.props.getTokenIntro(nextToken);\n      this.props.queryTokenDailyTransactions(nextToken);\n      this.props.getTokenDetails(nextToken);\n\n      if (this.timer === 0) {\n        this.timer = setInterval(this.tick, 5000);\n      }\n    }\n  }\n  \n  \n  \n  render() {\n    const {tokenStats :{tokenIntro, tokenDetails}} = this.props;\n    let tokenIntroBlock = <span/>;\n    let tokenHistoryData= [];\n    if (tokenDetails && tokenDetails.txPerHour && isNonEmptyArray(tokenDetails.txPerHour.transactions)) {\n          tokenHistoryData = tokenDetails.txPerHour.transactions.map(function(item){\n            return {\"x\": item.date, \"y\": item.transactions}\n        })\n    }\n    if (isNonEmptyObject(tokenIntro)) {\n      tokenIntroBlock = <TokenIntro tokenIntro={tokenIntro} tokenDetails={tokenDetails}/>\n    }\n    let contractTxnList = <span/>;\n\n    let detailsBlock = <span/>;\n    console.log(tokenDetails);\n    if (isNonEmptyObject(tokenDetails)) {\n      detailsBlock = (\n        <div>\n            <Col lg={6} xs={6}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.totalTransactions}</div>\n               <div className=\"display-card-label\">Num Txns (24h):  </div>\n            </div>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.verifiedTransactions}</div>\n               <div className=\"display-card-label\">Confirmed Txns (24h):</div>\n            </div>\n        </Col>\n        <Col lg={6} xs={6}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.totalGasUsed}</div>\n               <div className=\"display-card-label\">Gas Used (24h): </div>\n            </div>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.totalLogs}</div>\n               <div className=\"display-card-label\">Logs Generated (24h):</div>\n            </div>\n        </Col>   \n        </div>\n        )\n    }\n    \n    if (isNonEmptyObject(tokenDetails)) {\n\n      contractTxnList = tokenDetails.payload.sort(function(a, b){\n        return b.block.number - a.block.number;\n      }).map(function(item, idx){\n        let itemStatus = <span/>;\n        if (item.receipt.status) {\n          itemStatus = <i className=\"fa fa-check\"/>\n        } else {\n          itemStatus = <i className=\"fa fa-times\"/>\n        }\n        return (\n            <Row className=\"block-cell-subrow\">\n                <Col lg={12} className=\"block-cell-subcol\">\n                  <Col lg={7}>\n                    <span className=\"address-card-label\">Tx Hash: </span>\n                    <span className=\"address-card-value\">\n                    <Link to={`/transaction/${item.transaction.hash}`}>{item.transaction.hash}</Link>\n                    </span>\n                  </Col>\n                  <Col lg={3}>\n                    <span className=\"address-card-labe\">Block: </span>\n                    <span className=\"address-card-value\">\n                      <Link to={`/block/${item.block.number}`}>{item.block.number}</Link>\n                    </span>\n                  </Col>\n                  <Col lg={2}>\n                    <span className=\"address-card-labe\">Status: </span>\n                    <span className=\"address-card-value\">{itemStatus}</span>\n                  </Col>\n                  \n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                <Col lg={5}>\n                    <div>\n                      <span className=\"address-card-label\">Sender: </span>\n                      <span className=\"address-card-value\">\n                        <Link to={`/account/${item.transaction.from}`}>\n                          {item.transaction.from}\n                        </Link>\n                      </span>\n                    </div>\n                </Col>\n                <Col lg={5}>\n                    <div>\n                    <span className=\"address-card-label\">Receiver: </span>\n                    <span className=\"address-card-value\">\n                        <Link to={`/account/${item.transaction.to}`}>\n                          {item.transaction.to}\n                        </Link>\n                    </span>\n                    </div>\n                </Col>\n                <Col lg={2}>\n                \n                </Col>\n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                    <Col lg={2}>\n                    <span className=\"address-card-label\">Value: </span>\n                    <span className=\"address-card-value\">{item.transaction.value}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"address-card-label\">Gas Specified: </span>\n                      <span className=\"address-card-value\">{item.transaction.gas}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"address-card-label\">Timestap: </span>\n                      <span className=\"address-card-value\">{moment.unix(item.block.timestamp).format(\"hh:mm:ss a MM/DD/YY\")}</span>\n                    </Col>\n                </Col>\n            </Row>\n          )\n      })\n      \n    }\n    return (\n      <Grid>\n          <Row>\n            <Col lg={5} xs={12}><div className=\"display-row-header\">Token Details</div></Col>\n            <Col lg={3} xs={3}><div className=\"display-row-header\">Stats (24h)</div></Col>\n            <Col lg={4} xs={8}><div className=\"display-row-header\">Transactions (24h)</div></Col>\n          </Row>\n          <Row >\n              <Col lg={5} xs={12} className=\"display-card-row top-row-card\">\n                {tokenIntroBlock}             \n              </Col>\n              <Col lg={3} className=\"display-card-row top-row-card\">\n                {detailsBlock} \n              </Col>\n              <Col lg={4} className=\"display-card-row top-row-card\">\n                  <VictoryChart minDomain={{ y: 1000 }} padding={{ top: 20, bottom: 60 }}\n                                  width={600} height={300}>\n                      <VictoryLine\n                        style={{\n                          data: { stroke: \"#FFFC19\" },\n\n                    \n                        }}\n                        data={tokenHistoryData}\n                      />\n                      <VictoryAxis\n                      label=\"Time (hr)\"\n \n                        style={{\n                            axis: {stroke: \"#FFFC19\"},\n                          }}\n                    />\n                    <VictoryAxis dependentAxis\n                            style={{\n                            axis: {stroke: \" #FFFC19\"}\n                          }}/>\n                    </VictoryChart>\n              </Col>\n          </Row>\n          <Row>\n            <div className=\"display-row-header\">Transaction History (24h)</div>\n          </Row>\n          <Row className=\"display-card-row\">\n            <Col lg={12} className=\"txn-list-container block-page-txn-list-container\">\n              {contractTxnList}\n            </Col>\n          </Row>\n      </Grid>\n      )\n  }\n}\n\nclass TokenIntro extends Component {\n  render() {\n    const {tokenIntro, tokenDetails} = this.props;\n\n    return (\n      <div>\n        <Col lg={8} xs={8}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenIntro.name}</div>\n               <div className=\"display-card-label\">Name</div>                  \n            </div>\n\n        </Col>\n        <Col lg={4} xs={4}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenIntro.symbol}</div>\n               <div className=\"display-card-label\">Symbol</div>                  \n            </div>\n\n        </Col>\n        <Col lg={12}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-label\">Total Supply: </div>            \n               <div className=\"display-card-value\">{tokenIntro.totalSupply}</div>\n            </div>\n        </Col>\n        <Col lg={12}>\n            <div className=\"display-card-block\">\n              <div className=\"display-card-label\">Contract Address: </div>\n              <div className=\"display-card-value\">\n                <Link to={`/contract/${tokenIntro.contract}`}>{tokenIntro.contract}</Link>\n              </div>\n            </div>\n        </Col>\n   \n      </div>\n      )\n  }\n}","import ViewToken from './ViewToken';\nimport {fetchTokenDetails, fetchTokenDetailsSuccess, fetchTokenDetailsFailure, fetchTokenIntro,\n  fetchTokenIntroSuccess, fetchTokenIntroFailure, queryTokenDailyTransactions,  stopQueryTokenDailyTransactions,\n} from '../../../actions/token_stats';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    tokenStats: state.tokenStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n    getTokenIntro: (token) => {\n      dispatch(fetchTokenIntro(token)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(fetchTokenIntroSuccess(response.payload.data));\n        } else {\n          dispatch(fetchTokenIntroFailure(response.payload.error))\n        }\n      });\n    },\n    \n    getTokenDetails: (token) => {\n      dispatch(fetchTokenDetails(token)).then(function(tokenDetailResponse){\n        if (tokenDetailResponse.payload.status === 200) {\n          dispatch(fetchTokenDetailsSuccess(tokenDetailResponse.payload.data));\n        } else {\n          dispatch(fetchTokenDetailsFailure(tokenDetailResponse.payload.error))\n        }\n      });\n    },\n    queryTokenDailyTransactions: (token) => {\n      dispatch(queryTokenDailyTransactions(token));\n    },\n    stopQueryTokenDailyTransactions: (token) => {\n      dispatch(stopQueryTokenDailyTransactions(token));\n    }\n    \n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewToken);\n","import React, {Component} from 'react';\nimport {Grid, Row, Col} from 'react-bootstrap';\nimport {isEmptyObject, isNonEmptyArray, isNonEmptyObject} from '../../../utils/ObjectUtils';\nimport '../pages.scss';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom';\n\nexport default class ViewBlock extends Component {\n  componentWillMount() {\n    const {match: {params}} = this.props;\n    const block = params[0];\n    this.props.getBlockIntro(block);\n   // this.props.getDailyTransactionStats();\n   // this.props.getBlockInfo(block);\n  }\n  render() {\n    const {blockStats: {blockIntro, blockDetails}} = this.props;\n    let blockInfo = <i className=\"fa fa-spinner fa-spin loading-indicator\"/>;\n    if (isNonEmptyObject(blockIntro)) {\n      blockInfo = (\n        <BlockInfo blockIntro={blockIntro}/>\n        )\n    }\n    let blockTxnList = \n    <Col lg={12}>\n      <i className=\"fa fa-spinner fa-spin loading-indicator\"/>\n    </Col>\n    ;\n    if (isNonEmptyArray(blockDetails.transactionDetails)) {\n      blockTxnList = blockDetails.transactionDetails.map(function(item, idx){\n        let txStatus = <span/>;\n        if (item.receipt && item.receipt.status) {\n          txStatus = <i className=\"fa fa-check\"/>;\n        } else {\n          txStatus = <i className=\"fa fa-times\"/>;\n        }\n        return (\n              <Row className=\"block-cell-subrow\">\n                <Col lg={12} className=\"block-cell-subcol\">\n                  <Col lg={7}>\n                    <span className=\"address-card-label\">Tx Hash: </span> \n                    <span className=\"address-card-value\">\n                      <Link to={`/transaction/${item.transaction.hash}`}>{item.transaction.hash}</Link>\n                    </span>\n                  </Col>\n                  <Col lg={3}>\n                    <span className=\"address-card-label\">Value (Ether): </span>\n                    <span className=\"display-card-value\">{item.transaction.value}</span>\n                  </Col>\n                  <Col lg={2}>\n                    <span className=\"address-card-label\">Status: </span>\n                    <span className=\"address-card-value\">{txStatus}</span>\n                  </Col>\n                  \n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                <Col lg={5}>\n                  <div className=\"display-card-block\">\n                    <span className=\"address-card-label\">Sender: </span>\n                    <span className=\"address-card-value\">\n                      <Link to={`/account/${item.transaction.from}`}>{item.transaction.from}</Link>\n                    </span>\n                  </div>  \n                </Col>\n                <Col lg={5}>\n                  <div className=\"display-card-block\">\n                    <span className=\"address-card-label\">Receiver: </span>\n                    <span className=\"address-card-value\">\n                      <Link to={`/account/${item.transaction.to}`}>{item.transaction.to}</Link>\n                    </span>\n                  </div> \n                </Col>\n                <Col lg={2}>\n                \n                </Col>\n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                    <Col lg={2}>\n                      <span className=\"display-card-label\">Gas Limit: </span>\n                      <span className=\"address-card-value\">{item.transaction.gas}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"display-card-label\">Gas Price: </span>\n                      <span className=\"address-card-value\">{item.transaction.gasPrice}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"display-card-label\">Gas Used: </span>\n                      <span className=\"address-card-value\">{item.receipt? item.receipt.gasUsed : \"\"}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"display-card-label\">Cumulative Gas Used: </span>\n                      <span className=\"address-card-value\">{item.receipt ? item.receipt.cumulativeGasUsed : \"\"}</span>\n                    </Col>\n                </Col>\n                </Row>\n                )\n      })\n    }\n    return (\n      <Grid>\n          <Row>\n            <div className=\"display-row-header\">Block Number {blockIntro.blockNumber}</div>\n          </Row>\n          <Row className=\"display-card-row top-row-card block-page-top-card\">\n            {blockInfo}\n          </Row>\n          <Row>\n            <div className=\"display-row-header\">Transactions Included ({blockIntro.numTxns})</div>\n          </Row>\n          <Row className=\"display-card-row\">\n              <Col lg={12} className=\"txn-list-container block-page-txn-list-container\">\n                {blockTxnList}\n              </Col>\n          </Row>\n      </Grid>\n      )\n  }\n}\n\nclass BlockInfo extends Component {\n  render() {\n    const {blockIntro} = this.props;\n    return (\n      <div>\n        <Col lg={6} xs={12}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Gas Used </span><span className=\"display-card-value\">{blockIntro.gasUsed}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Gas Limit </span><span className=\"display-card-value\"> {blockIntro.gasLimit}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Confirmed At </span><span className=\"display-card-value\"> \n            {moment.unix(blockIntro.timestamp).format(\"hh:mm:ss a MM/DD/YY\")}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Number of Txns </span><span className=\"display-card-value\"> {blockIntro.numTxns}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <div className=\"display-card-label\">Miner Address </div><div className=\"display-card-value\">\n              <Link to={`/account/${blockIntro.miner}`}>{blockIntro.miner}</Link>\n            </div>\n          </div>          \n        </Col>\n        <Col lg={6} xs={12}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Block Nonce </span><span className=\"display-card-value\">{blockIntro.nonce}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Miner Details </span><span className=\"display-card-value\">{blockIntro.extraData}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Uncles Mined </span><span className=\"display-card-value\">{blockIntro.unclesMined}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Block Size </span><span className=\"display-card-value\">{blockIntro.size}</span>\n          </div>\n          <div className=\"display-card-block\">\n            <div className=\"display-card-label\">Parent Hash </div>\n            <div className=\"display-card-value\">\n              {blockIntro.parentHash}\n            </div>\n          </div>\n        </Col>\n      </div>\n      \n      )\n  }\n}","import ViewBlock from './ViewBlock';\n\nimport {getBlockDetails, getBlockDetailsSuccess, getBlockDetailsFailure, \n        getBlockIntro, getBlockIntroSuccess, getBlockIntroFailure\n       } from '../../../actions/block_stats';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    blockStats: state.blockStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getBlockIntro: (blockNumber) => {\n      dispatch(getBlockIntro(blockNumber)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(getBlockIntroSuccess(response.payload.data));\n          // Fetch Block Details\n          dispatch(getBlockDetails(blockNumber)).then(function(response){\n            if (response.payload.status === 200) {\n              console.log(response.payload.data);\n              dispatch(getBlockDetailsSuccess(response.payload.data));\n            } else {\n              dispatch(getBlockDetailsFailure(response.payload.error))\n            }\n          });\n        } else {\n          dispatch(getBlockIntroFailure(response.payload.error));\n        }\n      });\n    },\n    getBlockDetails: (blockNumber) => {\n      dispatch(getBlockDetails(blockNumber)).then(function(response){\n        if (response.payload.status === 200) {\n          console.log(response.payload.data);\n          dispatch(getBlockDetailsSuccess(response.payload.data));\n        } else {\n          dispatch(getBlockDetailsFailure(response.payload.error))\n        }\n      });\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewBlock);\n","import React, {Component} from 'react';\nimport {Grid, Row, Col} from 'react-bootstrap';\nimport {isNonEmptyArray, isNonEmptyObject, isEmptyArray} from '../../../utils/ObjectUtils';\nimport {Link} from 'react-router-dom';\n\nexport default class ViewAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\"transactionView\": \"latest\"}\n  }\n  componentWillMount() {\n    const {match: {params}} = this.props;\n    const account = params[0];\n\n    this.props.getAccountDetails(account);\n    this.props.getAccountCurrentTransactions(account);\n    /**\n     * Account transactions are not indexed on web3 and requires deep queries on ~6000 blocks \n     * hence current implementation not suitable for a single thread server\n     */\n    //this.props.queryAccountDayTransactions(account);\n    //this.props.getAccountDayTransactions(account);\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    const {match: {params}} = nextProps;\n    const account = params[0];\n    if (account !== this.props.match.params[0] && account !== null) {\n      this.props.getAccountDetails(account);\n      this.props.getAccountCurrentTransactions(account);\n    }\n  }\n  \n  componentWillUnmount() {\n    this.props.clearAccountDetails();\n  }\n  \n  render() {\n    const {accountStats: {accountDetails, accountCurrentTransactions}} = this.props;\n\n    let accountBalances = <i className=\"fa fa-spinner fa-spin loading-indicator\"/>;\n    if (isNonEmptyArray(accountDetails)) {\n      accountBalances = accountDetails.filter(function(item){\n        return item.balance && Number(item.balance) > 0\n      }).map(function(balanceItem){\n        return <Col lg={4} className=\"display-card-block\">\n        <div>\n          <span className=\"display-card-label\">\n            Name:&nbsp; \n          </span>\n          <span className=\"display-card-value\">\n            <Link to={`/token/${balanceItem.token.symbol}`}>{balanceItem.token.name}</Link>\n          </span></div>\n        <div>\n          <span className=\"display-card-label\">\n          Symbol:&nbsp;  </span>\n          <span className=\"display-card-value\">\n          <Link to={`/token/${balanceItem.token.symbol}`}>{balanceItem.token.symbol}</Link></span></div>\n        <div>\n          <span className=\"display-card-label\">Amount:&nbsp;  </span>\n          <span className=\"display-card-value\">{balanceItem.balance}</span>\n        </div>\n        </Col>\n      })\n    }\n    let currentTransactionView = <i className=\"fa fa-spinner fa-spin loading-indicator\"/>;\n    if (this.state.transactionView === \"latest\" && isNonEmptyObject(accountCurrentTransactions)) {\n      currentTransactionView = <LatestTransactionView accountCurrentTransactions={accountCurrentTransactions}/>\n    } else {\n      \n    }\n    return (\n      <Grid>\n          <Row>\n            <div className=\"display-row-header\">Account Balances</div>\n          </Row>\n          <Row className=\"display-card-row top-row-card block-page-top-card\">\n            {accountBalances}\n          </Row>\n          <Row>\n            <div className=\"display-row-header\">Transactions</div>\n          </Row>\n          <Row className=\"display-card-row top-row-card block-page-bottom-card\">\n            {currentTransactionView}\n          </Row>\n      </Grid>\n      )\n  }\n}\n\nclass LatestTransactionView extends Component {\n  render() {\n    const {accountCurrentTransactions: {latest, pending}, accountCurrentTransactions} = this.props;\n    let pendingTxList = <span/>;\n    let latestTxList = <span/>;\n\n    if (isEmptyArray(latest)){\n      latestTxList = <div className=\"empty-block-label\">No transactions for account in current block.</div>\n    } else {\n      latestTxList = latest.map(function(item){\n        return <AccountTransaction item={item}/>\n      })\n    }\n    if (isEmptyArray(pending)) {\n      pendingTxList = <div className=\"empty-block-label\">No pending transactions for account.</div>\n    } else {\n      pendingTxList = pending.map(function(item){\n        return <AccountTransaction item={item}/>\n      })      \n    }\n    return (\n      <div>\n        <div className=\"account-transaction-block\">\n        <div className=\"account-transactions-subhead\">Pending Transactions</div>\n        {pendingTxList}\n        </div>\n        <div className=\"account-transaction-block\">\n        <div className=\"account-transactions-subhead\">Latest Confirmed Transactions</div>\n        {latestTxList}\n        </div>\n      </div>\n      )\n  }\n}\n\nclass AccountTransaction extends Component {\n  render() {\n    const {item} = this.props;\n    let txStatus = <span/>;\n    if (item.receipt && item.receipt.status) {\n      txStatus = <i className=\"fa fa-check\"/>;\n    } else {\n      txStatus = <i className=\"fa fa-times\"/>;\n    }    \n    return (\n              <Row className=\"block-cell-subrow\">\n                <Col lg={12} className=\"block-cell-subcol\">\n                  <Col lg={7}>\n                    <span className=\"address-card-label\">Tx Hash: </span> \n                    <span className=\"address-card-value\">\n                      <Link to={`/transaction/${item.transaction.hash}`}>{item.transaction.hash}</Link>\n                    </span>\n                  </Col>\n                  <Col lg={3}>\n                    <span className=\"address-card-label\">Value: </span>\n                    <span className=\"display-card-value\">{item.transaction.value}</span>\n                  </Col>\n                  <Col lg={2}>\n                    <span className=\"address-card-label\">Status: </span>\n                    <span className=\"address-card-value\">{txStatus}</span>\n                  </Col>\n                  \n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                <Col lg={5}>\n                  <div className=\"display-card-block\">\n                    <span className=\"address-card-label\">Sender: </span>\n                    <span className=\"address-card-value\">\n                      <Link to={`/account/${item.transaction.from}`}>{item.transaction.from}</Link>\n                    </span>\n                  </div>  \n                </Col>\n                <Col lg={5}>\n                  <div className=\"display-card-block\">\n                    <span className=\"address-card-label\">Receiver: </span>\n                    <span className=\"address-card-value\">\n                      <Link to={`/account/${item.transaction.to}`}>{item.transaction.to}</Link>\n                    </span>\n                  </div> \n                </Col>\n                <Col lg={2}>\n                \n                </Col>\n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                    <Col lg={2}>\n                      <span className=\"display-card-label\">Gas Limit: </span>\n                      <span className=\"address-card-value\">{item.transaction.gas}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"display-card-label\">Gas Price: </span>\n                      <span className=\"address-card-value\">{item.transaction.gasPrice}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"display-card-label\">Gas Used: </span>\n                      <span className=\"address-card-value\">{item.receipt? item.receipt.gasUsed : \"\"}</span>\n                    </Col>\n                    <Col lg={3}>\n                      <span className=\"display-card-label\">Cumulative Gas Used: </span>\n                      <span className=\"address-card-value\">{item.receipt ? item.receipt.cumulativeGasUsed : \"\"}</span>\n                    </Col>\n                </Col>\n                </Row>\n      \n      )\n  }\n}","import ViewAccount from './ViewAccount';\n\nimport {getAccountDetails, getAccountDetailsSuccess, getAccountDetailsFailure, getAccountCurrentTransactions, getAccountCurrentTransactionsSuccess,\ngetAccountCurrentTransactionsFailure, getAccountDayTransactions, getAccountDayTransactionsSuccess, getAccountDayTransactionsFailure,\nqueryAccountDayTransactions, clearAccountDetails\n} from '../../../actions/account_stats';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    accountStats: state.accountStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAccountDetails: (accountNumber) => {\n      dispatch(getAccountDetails(accountNumber)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(getAccountDetailsSuccess(response.payload.data));\n        } else {\n          dispatch(getAccountDetailsFailure(response.payload.error))\n        }\n      });\n    },\n    getAccountCurrentTransactions: (accountNumber) => {\n      dispatch(getAccountCurrentTransactions(accountNumber)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(getAccountCurrentTransactionsSuccess(response.payload.data));\n        } else {\n          dispatch(getAccountCurrentTransactionsFailure(response.payload.error));\n        }\n      })  \n    },\n    getAccountDayTransactions: (accountNumber) => {\n      dispatch(getAccountDayTransactions(accountNumber)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(getAccountDayTransactionsSuccess(response.payload.data));\n        } else {\n          dispatch(getAccountDayTransactionsFailure(response.payload.error));\n        }\n      })\n    },\n    queryAccountDayTransactions: (accountNumber) => {\n      dispatch(queryAccountDayTransactions(accountNumber));\n    },\n    clearAccountDetails: () => {\n      dispatch(clearAccountDetails());\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewAccount);\n","import React, {Component} from 'react';\nimport {Grid, Row, Col} from 'react-bootstrap';\nimport {isNonEmptyObject, isNonEmptyArray} from '../../../utils/ObjectUtils';\nimport {Link} from 'react-router-dom';\n\nexport default class ViewTransaction extends Component {\n  componentWillMount() {\n    const {match: {params}} = this.props;\n    const transaction = params[0];\n    this.props.getTransactionDetails(transaction);    \n  }\n  \n  componentWillUnmount() {\n\n    this.props.resetTransactionDetails();\n  }\n  render() {\n    const {transactionStats: {transactionDetails}} = this.props;\n    let transactionDetail = <i className=\"fa fa-spinner fa-spin loading-indicator\"/>;\n    if (isNonEmptyObject(transactionDetails)) {\n      transactionDetail = <TransactionDetail transactionDetails={transactionDetails}/>\n    }\n\n    return (\n      <Grid>\n        <div className=\"tx-container\">\n          <Row>\n            <div className=\"display-row-header\">Transaction Details </div>\n          </Row>\n          <Row >\n            <Col lg={12} xs={12} className=\"display-card-row top-row-card trasaction-container-card\">\n              {transactionDetail}\n            </Col>\n          </Row>\n          </div>\n      </Grid>\n      )\n  }\n}\n\nclass TransactionDetail extends Component {\n  render() {\n    const {transactionDetails} = this.props;\n    let isTxonfirmed = <span/>;\n    if (transactionDetails.receipt.status) {\n      isTxonfirmed = <i className=\"fa fa-check\"/>;\n    } else {\n      isTxonfirmed = <i className=\"fa fa-times\"/>;\n    }\n    let transactionLogs = <span/>;\n    let isContractCreation = \"\";\n    \n    if (transactionDetails.receipt.contractAddress) {\n      isContractCreation = `Yes ${transactionDetails.receipt.contractAddress}`\n    } else {\n      isContractCreation = 'No';\n    }\n    if (isNonEmptyArray(transactionDetails.receipt.logs)) {\n      transactionLogs = transactionDetails.receipt.logs.map(function(item){\n        return (\n          <div>\n          Data: {item.data}\n          <div>\n          <div className=\"logs-head\">Topics:</div> \n          {item.topics.map(function(t){\n            return <div>{t}</div>\n          })}\n          </div>\n          </div>\n          )\n      })\n    }\n    \n    return (\n      <div>\n        <Col lg={12}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Tx Hash: </span>\n            <span className=\"display-card-value\">\n              <Link to={`/transaction/${transactionDetails.transaction.hash}`}>{transactionDetails.transaction.hash}</Link>\n            </span>\n          </div>    \n        </Col>\n        \n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">From: </span>\n            <span className=\"display-card-value\">\n              <Link to={`/account/${transactionDetails.transaction.from}`}>{transactionDetails.transaction.from}</Link>\n            </span>\n          </div>                \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">To: </span>\n            <span className=\"display-card-value\">\n              <Link to={`/account/${transactionDetails.transaction.to}`}>{transactionDetails.transaction.to}</Link>\n            </span>\n          </div>                   \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Block: </span>\n            <span className=\"display-card-value\">{transactionDetails.transaction.blockNumber}</span>\n          </div>                  \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Index: </span>\n            <span className=\"display-card-value\">{transactionDetails.receipt.transactionIndex}</span>\n          </div>                  \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Confirmed: </span>\n            <span className=\"display-card-value\">{isTxonfirmed}</span>\n          </div>                  \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Number of Confirmations: </span>\n            <span className=\"display-card-value\">{transactionDetails.numConfirmations}</span>\n          </div>                 \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Gas Used: </span>\n            <span className=\"display-card-value\">{transactionDetails.receipt.gasUsed}</span>\n          </div>                  \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Cumulative Gas Used: </span>\n            <span className=\"display-card-value\">{transactionDetails.receipt.cumulativeGasUsed}</span>\n          </div>                    \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Gas Specified: </span>\n            <span className=\"display-card-value\">{transactionDetails.transaction.gas}</span>\n          </div>                  \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Gas Price: </span>\n            <span className=\"display-card-value\">{transactionDetails.transaction.gasPrice}</span>\n          </div>                   \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Is Contraction creation event? </span>\n            <span className=\"display-card-value\">{isContractCreation}</span>\n          </div>                   \n        </Col>\n        <Col lg={6}>\n          <div className=\"display-card-block\">\n            <span className=\"display-card-label\">Value (Ether) </span>\n            <span className=\"display-card-value\">{transactionDetails.transaction.value}</span>\n          </div>                 \n        </Col>\n        <Col lg={12} className=\"tx-logs-container\">\n          <div className=\"logs-head\">Logs</div>\n          {transactionLogs}\n        </Col>\n        </div>\n      )\n  }\n}","import ViewTransaction from './ViewTransaction.js';\n\nimport {getTransactionDetails, getTransactionDetailsSuccess, getTransactionDetailsFailure,\n        resetTransactionDetails\n} from '../../../actions/transaction_stats';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    transactionStats: state.transactionStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n     getTransactionDetails: (blockNumber) => {\n      dispatch(getTransactionDetails(blockNumber)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(getTransactionDetailsSuccess(response.payload.data));\n        } else {\n          dispatch(getTransactionDetailsFailure(response.payload.error))\n        }\n      });\n    },\n    resetTransactionDetails: () => {\n      dispatch(resetTransactionDetails());\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewTransaction);\n","import React, {Component} from 'react';\nimport {Grid, Row, Col} from 'react-bootstrap';\nimport {isEmptyObject, isNonEmptyArray, isNonEmptyObject} from '../../../utils/ObjectUtils';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport {VictoryChart, VictoryLine, VictoryAxis} from 'victory';\n\nimport '../pages.scss';\n\nexport default class ViewContract extends Component {\n  constructor(props) {\n    super(props);\n    this.tick = this.tick.bind(this);\n  }\n  \n  tick() {\n    const {match: {params}, tokenStats :{tokenDetails}} = this.props;\n    const token = params[0];\n    console.log(params);\n    if (isEmptyObject(tokenDetails)) {\n      this.props.getTokenDetails(token);\n    }\n  }\n    \n  componentWillMount() {\n    const {match: {params}} = this.props;\n    const token = params[0];\n    this.props.getTokenIntro(token);\n    this.props.queryTokenDailyTransactions(token);\n    this.props.getTokenDetails(token);\n    this.timer = setInterval(this.tick, 5000);\n  }\n  componentWillUnmount() {\n    const {match: {params}} = this.props;\n    const token = params[0];\n    clearInterval(this.timer);\n    this.props.stopQueryTokenDailyTransactions(token);\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    const {match: {params}, tokenStats :{tokenIntro, tokenDetails}} = nextProps;\n    const nextToken = params[0];\n\n    if (isNonEmptyObject(tokenDetails)) {\n      clearInterval(this.timer);\n      this.timer = 0;\n    }\n    if (nextToken !== this.props.match.params[0]) {\n      this.props.getTokenIntro(nextToken);\n      this.props.queryTokenDailyTransactions(nextToken);\n      this.props.getTokenDetails(nextToken);\n      console.log(this.timer);\n      console.log(this.tick);\n      if (this.timer === 0) {\n        this.timer = setInterval(this.tick, 5000);\n      }\n    }\n  }\n  \n  \n  \n  render() {\n    const {tokenStats :{tokenIntro, tokenDetails}} = this.props;\n    let tokenIntroBlock = <span/>;\n    let tokenHistoryData= [];\n    if (tokenDetails && tokenDetails.txPerHour && isNonEmptyArray(tokenDetails.txPerHour.transactions)) {\n          tokenHistoryData = tokenDetails.txPerHour.transactions.map(function(item){\n            return {\"x\": item.date, \"y\": item.transactions}\n        })\n    }\n    if (isNonEmptyObject(tokenIntro)) {\n      tokenIntroBlock = <TokenIntro tokenIntro={tokenIntro} tokenDetails={tokenDetails}/>\n    }\n    let contractTxnList = <span/>;\n\n    let detailsBlock = <span/>;\n    if (isNonEmptyObject(tokenDetails)) {\n      detailsBlock = (\n        <div>\n                <Col lg={6} xs={6}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.totalTransactions}</div>\n               <div className=\"display-card-label\">Num Txns (24h):  </div>\n            </div>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.verifiedTransactions}</div>\n               <div className=\"display-card-label\">Confirmed Txns (24h):</div>\n            </div>\n        </Col>\n        <Col lg={6} xs={6}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.totalGasUsed}</div>\n               <div className=\"display-card-label\">Gas Used (24h): </div>\n            </div>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenDetails.totalLogs}</div>\n               <div className=\"display-card-label\">Logs Generated (24h):</div>\n            </div>\n        </Col>   \n        </div>\n        )\n    }\n    \n    if (isNonEmptyObject(tokenDetails)) {\n\n      contractTxnList = tokenDetails.payload.map(function(item, idx){\n        return (\n            <Row className=\"block-cell-subrow\">\n                <Col lg={12} className=\"block-cell-subcol\">\n                  <Col lg={6}>\n                  Tx #{item.transaction.hash}</Col>\n                  <Col lg={3}>Block {item.block.number}</Col>\n                  <Col lg={3}>\n                    Status {item.receipt.status}\n                  </Col>\n                  \n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                <Col lg={5}>\n                    <div> Sender: {item.transaction.from}</div>\n                </Col>\n                <Col lg={5}>\n                    <div>Receiver: {item.transaction.to}</div>\n                </Col>\n                <Col lg={2}>\n                \n                </Col>\n                </Col>\n                <Col lg={12} className=\"block-cell-subcol\">\n                    <Col lg={2}>Value: {item.transaction.value}</Col>\n                    <Col lg={3}>Gas Specified: {item.transaction.gas}</Col>\n                    <Col lg={3}>Timestap: {item.timestamp}</Col>\n                </Col>\n                </Row>\n          \n          )\n      })\n      \n    }\n    return (\n      <Grid>\n          <Row>\n            <div className=\"display-row-header\">Token Details</div>\n          </Row>\n          <Row >\n              <Col lg={5} xs={12} className=\"display-card-row top-row-card\">\n                {tokenIntroBlock}             \n              </Col>\n              <Col lg={3} className=\"display-card-row top-row-card\">\n                {detailsBlock} \n              </Col>\n\n              \n              <Col lg={4} className=\"display-card-row top-row-card\">\n                  <VictoryChart minDomain={{ y: 1000 }} padding={{ top: 20, bottom: 60 }}\n                                  width={600} height={300}>\n                      <VictoryLine\n                        style={{\n                          data: { stroke: \"#FFFC19\" },\n\n                    \n                        }}\n                        data={tokenHistoryData}\n                      />\n                      <VictoryAxis\n                      label=\"Time (hr)\"\n \n                        style={{\n                            axis: {stroke: \"#FFFC19\"},\n                          }}\n                    />\n                    <VictoryAxis dependentAxis\n                            style={{\n                            axis: {stroke: \" #FFFC19\"}\n                          }}/>\n                    </VictoryChart>\n              </Col>\n          </Row>\n          <Row>\n            <div className=\"display-row-header\">Transaction History (24h)</div>\n          </Row>\n          <Row className=\"display-card-row\">\n            <Col lg={12} className=\"txn-list-container block-page-txn-list-container\">\n              {contractTxnList}\n            </Col>\n          </Row>\n      </Grid>\n      )\n  }\n}\n\nclass TokenIntro extends Component {\n  render() {\n    const {tokenIntro, tokenDetails} = this.props;\n\n    return (\n      <div>\n        <Col lg={8} xs={8}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenIntro.name}</div>\n               <div className=\"display-card-label\">Name</div>                  \n            </div>\n\n        </Col>\n        <Col lg={4} xs={4}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-value\">{tokenIntro.symbol}</div>\n               <div className=\"display-card-label\">Symbol</div>                  \n            </div>\n\n        </Col>\n        <Col lg={12}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-label\">Total Supply: </div>            \n               <div className=\"display-card-value\">{tokenIntro.totalSupply}</div>\n            </div>\n        </Col>\n        <Col lg={12}>\n            <div className=\"display-card-block\">\n               <div className=\"display-card-label\">Contract Address: </div>\n               <div className=\"display-card-value\">{tokenIntro.contract}</div>\n            </div>\n        </Col>\n   \n      </div>\n      )\n  }\n}","import ViewContract from './ViewContract';\nimport {fetchTokenDetails, fetchTokenDetailsSuccess, fetchTokenDetailsFailure, fetchTokenIntro,\n  fetchTokenIntroSuccess, fetchTokenIntroFailure, queryTokenDailyTransactions,  stopQueryTokenDailyTransactions,\n} from '../../../actions/token_stats';\n\nimport {connect} from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    tokenStats: state.tokenStats\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n    getTokenIntro: (token) => {\n      dispatch(fetchTokenIntro(token)).then(function(response){\n        if (response.payload.status === 200) {\n          dispatch(fetchTokenIntroSuccess(response.payload.data));\n        } else {\n          dispatch(fetchTokenIntroFailure(response.payload.error))\n        }\n      });\n    },\n    \n    getTokenDetails: (token) => {\n      dispatch(fetchTokenDetails(token)).then(function(tokenDetailResponse){\n        if (tokenDetailResponse.payload.status === 200) {\n          dispatch(fetchTokenDetailsSuccess(tokenDetailResponse.payload.data));\n        } else {\n          dispatch(fetchTokenDetailsFailure(tokenDetailResponse.payload.error))\n        }\n      });\n    },\n    queryTokenDailyTransactions: (token) => {\n      dispatch(queryTokenDailyTransactions(token));\n    },\n    stopQueryTokenDailyTransactions: (token) => {\n      dispatch(stopQueryTokenDailyTransactions(token));\n    }\n    \n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ViewContract);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport englishLocaleData from 'react-intl/locale-data/en';\nimport LandingContainer from './components/landing/LandingContainer.js';\nimport TopNavBarContainer from './components/nav/TopNavBarContainer.js';\nimport BottomNavBar from './components/nav/BottomNavBar';\n\nimport ViewTokenContainer from './components/pages/token/ViewTokenContainer';\nimport ViewBlockContainer from './components/pages/block/ViewBlockContainer';\nimport ViewAccountContainer from './components/pages/account/ViewAccountContainer';\nimport ViewTransactionContainer from './components/pages/transaction/ViewTransactionContainer';\nimport ViewContractContainer from './components/pages/contract/ViewContractContainer';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Router>\n          <div>\n            <TopNavBarContainer/>\n            <Route exact path=\"/\" component={LandingContainer}/>\n            <Route  path=\"/token/*\" component={ViewTokenContainer}/>\n            <Route  path=\"/block/*\" component={ViewBlockContainer}/>\n            <Route  path=\"/account/*\" component={ViewAccountContainer}/>\n            <Route  path=\"/transaction/*\" component={ViewTransactionContainer}/>\n            <Route path=\"/contract/*\" component={ViewContractContainer}/>\n            <BottomNavBar/>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nconst store = configureStore();\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { FETCH_ETHEREUM_DATA, FETCH_ETHEREUM_DATA_SUCCESS, FETCH_ETHEREUM_DATA_FAILURE, GET_HOURLY_TRANSACTION_STATS,\nGET_HOURLY_TRANSACTION_STATS_SUCCESS, GET_HOURLY_TRANSACTION_STATS_FAILURE, CLEAR_ETHEREUM_DATA} from '../actions/ethereum_stats';\n\nconst initialState = {\n  blockData: {\"top\": \"\", \"latestBlock\": {}, \"latestBlockTransactions\": {}, \"pendingBlockTransactions\": {}},\n  dailyTransactionStats: [],\n  hourlyTransactionStats: [],\n  dataFetched: false,\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function etherStatsReducer (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ETHEREUM_DATA:\n      return {\n        ...state,\n\n        isFetching: true\n      }\n    case FETCH_ETHEREUM_DATA_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        success: true,\n        blockData: action.payload.data\n      }\n    case FETCH_ETHEREUM_DATA_FAILURE:\n      return {\n        ...state,\n        blockData: initialState.blockStats,\n        isFetching: false,\n        error: true\n      }\n    case GET_HOURLY_TRANSACTION_STATS:\n      return {...state}\n      \n    case GET_HOURLY_TRANSACTION_STATS_SUCCESS:\n      return {...state, hourlyTransactionStats: action.payload.data};\n      \n    case GET_HOURLY_TRANSACTION_STATS_FAILURE:\n      return {...state, dailyTransactionStats: action.payload.error}\n    \n    case CLEAR_ETHEREUM_DATA:\n      return {...state, blockData: initialState.blockData, dailyTransactionStats: initialState.dailyTransactionStats,\n        hourlyTransactionStats: initialState.hourlyTransactionStats\n      }\n      \n    default:\n      return state\n  }\n}","import { GET_USER_INPUT_STATS, GET_USER_INPUT_STATS_SUCCESS, GET_USER_INPUT_STATS_FAILURE, GET_SEARCH_STRING_TYPE,\n         GET_SEARCH_STRING_TYPE_SUCCESS, GET_SEARCH_STRING_TYPE_FAILURE} from '../actions/user_input_stats';\n\nconst initialState = {\n  searchStringType: \"\",\n  userInputData: {\"top\": \"\", \"latestBlock\": {}, \"latestBlockTransactions\": {}, \"pendingBlockTransactions\": {}},\n  dataFetched: false,\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function userInputStatsReducer (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_INPUT_STATS:\n      return {\n        ...state,\n        isFetching: true\n      }\n    case GET_USER_INPUT_STATS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        success: true,\n        userInputData: action.payload.data\n      }\n    case GET_USER_INPUT_STATS_FAILURE:\n      return {\n        ...state,\n        userInputData: initialState.blockStats,\n        isFetching: false,\n        error: true\n      }\n    case GET_SEARCH_STRING_TYPE:\n      return {...state, searchStringType: \"\"}\n    case GET_SEARCH_STRING_TYPE_SUCCESS:\n      return {...state, searchStringType: action.payload.data}\n    default:\n      return state\n  }\n}","import { GET_BLOCK_INTRO, GET_BLOCK_INTRO_SUCCESS, GET_BLOCK_INTRO_FAILURE, GET_BLOCK_DETAILS,\n  GET_BLOCK_DETAILS_SUCCESS, GET_BLOCK_DETAILS_FAILURE\n} from '../actions/block_stats';\n\nconst initialState = {\n  blockIntro: {},\n  blockDetails: {},\n  dataFetched: false,\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function blockStatsReducer (state = initialState, action) {\n  switch (action.type) {\n    case GET_BLOCK_INTRO:\n      return {...state, blockIntro: {}}\n    case GET_BLOCK_INTRO_SUCCESS:\n      return {...state, blockIntro: action.payload.data}\n    case GET_BLOCK_INTRO_FAILURE:\n      return {...state, blockIntro: {}}\n    case GET_BLOCK_DETAILS:\n      return {\n        ...state,\n        blockDetails: {},\n        isFetching: true\n      }\n    case GET_BLOCK_DETAILS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        success: true,\n        blockDetails: action.payload.data\n      }\n    case GET_BLOCK_DETAILS_FAILURE:\n      return {\n        ...state,\n        blockDetails: {},\n        isFetching: false,\n        error: true\n      }\n    default:\n      return state\n  }\n}","import { FETCH_TOKEN_DETAILS, FETCH_TOKEN_DETAILS_FAILURE, FETCH_TOKEN_DETAILS_SUCCESS, FETCH_TOKEN_INTRO,\n         FETCH_TOKEN_INTRO_SUCCESS, FETCH_TOKEN_INTRO_FAILURE} from '../actions/token_stats';\n\nconst initialState = {\n  tokenDetails: {},\n  tokenIntro: {},\n  dataFetched: false,\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function etherStatsReducer (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TOKEN_DETAILS:\n      return {\n        ...state,\n        tokenDetails: {},\n        isFetching: true\n      }\n    case FETCH_TOKEN_DETAILS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        success: true,\n        tokenDetails: action.payload.data\n      }\n    case FETCH_TOKEN_DETAILS_FAILURE:\n      return {\n        ...state,\n        tokenDetails: {},\n        isFetching: false,\n        error: true\n      }\n    case FETCH_TOKEN_INTRO:\n      return {...state, tokenIntro: {}}\n    case FETCH_TOKEN_INTRO_SUCCESS:\n      return {...state, tokenIntro: action.payload.data}\n    case FETCH_TOKEN_INTRO_FAILURE:\n      return {...state, tokenIntro: {}}\n    default:\n      return state\n  }\n}","import { GET_TRANSACTION_DETAILS, GET_TRANSACTION_DETAILS_SUCCESS, GET_TRANSACTION_DETAILS_FAILURE,\n  RESET_TRANSACTION_DETAILS\n} from '../actions/transaction_stats';\n\nconst initialState = {\n  transactionDetails: {},\n  dataFetched: false,\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function transactionStatsReducer (state = initialState, action) {\n  switch (action.type) {\n    case GET_TRANSACTION_DETAILS:\n      return {\n        ...state,\n        transactionDetails: {},\n        isFetching: true\n      }\n    case GET_TRANSACTION_DETAILS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        success: true,\n        transactionDetails: action.payload.data\n      }\n    case GET_TRANSACTION_DETAILS_FAILURE:\n      return {\n        ...state,\n        transactionDetails: {},\n        isFetching: false,\n        error: true\n      }\n    case RESET_TRANSACTION_DETAILS:\n      return {...state, transactionDetails: {}}\n    default:\n      return state\n  }\n}","import { GET_ACCOUNT_DETAILS, GET_ACCOUNT_DETAILS_SUCCESS, GET_ACCOUNT_DETAILS_FAILURE,\n  GET_ACCOUNT_CURRENT_TRANSACTIONS, GET_ACCOUNT_CURRENT_TRANSACTIONS_SUCCESS, GET_ACCOUNT_CURRENT_TRANSACTIONS_FAILURE,\n  CLEAR_ACCOUNT_DETAILS\n} from '../actions/account_stats';\n\nconst initialState = {\n  accountDetails: [],\n  accountCurrentTransactions: {},\n  dataFetched: false,\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function accountStatsReducer (state = initialState, action) {\n  switch (action.type) {\n    case GET_ACCOUNT_DETAILS:\n      return {\n        ...state,\n        accountDetails: [],\n        isFetching: true\n      }\n    case GET_ACCOUNT_DETAILS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        success: true,\n        accountDetails: action.payload.data\n      }\n    case GET_ACCOUNT_DETAILS_FAILURE:\n      return {\n        ...state,\n        accountDetails: [],\n        isFetching: false,\n        error: true\n      }\n    case GET_ACCOUNT_CURRENT_TRANSACTIONS:\n      return {...state, accountCurrentTransactions: {}}\n    case GET_ACCOUNT_CURRENT_TRANSACTIONS_SUCCESS:\n      return {...state,accountCurrentTransactions: action.payload.data}\n    case GET_ACCOUNT_CURRENT_TRANSACTIONS_FAILURE:\n      return {...state}\n    case CLEAR_ACCOUNT_DETAILS:\n      return {...state, accountDetails: initialState.accountDetails, accountCurrentTransactions: initialState.accountCurrentTransactions}\n    default:\n      return state\n  }\n}","\nimport { combineReducers } from 'redux';\n\nimport etherStatsReducer from './ethereum_stats';\nimport userInputStatsReducer from './user_input_stats';\nimport blockStatsReducer from './block_stats';\nimport tokenStatsReducer from './token_stats';\nimport transactionStatsReducer from './transaction_stats';\nimport accountStatsReducer from './account_stats';\n\nconst rootReducer = combineReducers({\n    etherStats: etherStatsReducer,\n    blockStats: blockStatsReducer,\n    tokenStats: tokenStatsReducer,\n    userInputStats: userInputStatsReducer,\n    transactionStats: transactionStatsReducer,\n    accountStats: accountStatsReducer\n})\n\nexport default rootReducer","\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport promise from 'redux-promise';\nimport index from '../reducers';\n\n\nexport default function configureStore(initialState) {\n  const finalCreateStore = compose(\n    applyMiddleware(promise),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )(createStore);\n\n  const store = finalCreateStore(index, initialState);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","import axios from 'axios';\nexport const GET_TRANSACTION_DETAILS = 'GET_TRANSACTION_DETAIL';\nexport const GET_TRANSACTION_DETAILS_SUCCESS = 'GET_TRANSACTION_DETAIL_SUCCESS';\nexport const GET_TRANSACTION_DETAILS_FAILURE = 'GET_TRANSACTION_DETAIL_FAILURE';\n\nexport const RESET_TRANSACTION_DETAILS = 'RESET_TRANSACTION_DETAILS';\n\nexport function getTransactionDetails(txHash) {\n  const request = axios.get(`/api/transaction_details?search=${txHash}`);\n  return {\n      type: GET_TRANSACTION_DETAILS,\n      payload: request\n  }\n}\n\nexport function getTransactionDetailsSuccess(response) {\n  return {\n    type: GET_TRANSACTION_DETAILS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getTransactionDetailsFailure(error) {\n  return {\n    type: GET_TRANSACTION_DETAILS_FAILURE,\n    payload: error\n  }\n}\n\nexport function resetTransactionDetails() {\n  return {\n    type: RESET_TRANSACTION_DETAILS\n  }\n}","import axios from 'axios';\n\nconst API_ENDPOINT = 'http://localhost:3000/api';\n\nexport const FETCH_ETHEREUM_DATA = 'FETCH_ETHEREUM_DATA';\nexport const FETCH_ETHEREUM_DATA_SUCCESS = 'FETCH_ETHEREUM_DATA_SUCCESS';\nexport const FETCH_ETHEREUM_DATA_FAILURE = 'FETCH_ETHEREUM_DATA_FAILURE';\n\n\nexport const FETCH_DAILY_TRANSACION_STATS = 'FETCH_DAILY_TRANSACION_STATS';\nexport const FETCH_DAILY_TRANSACION_STATS_SUCCESS = 'FETCH_DAILY_TRANSACION_STATS_SUCCESS';\nexport const FETCH_DAILY_TRANSACION_STATS_FAILURE = 'FETCH_DAILY_TRANSACION_STATS_FAILURE';\n\nexport const GET_HOURLY_TRANSACTION_STATS = 'GET_HOURLY_TRANSACTION_STATS';\nexport const GET_HOURLY_TRANSACTION_STATS_SUCCESS = 'GET_HOURLY_TRANSACTION_STATS_SUCCESS';\nexport const GET_HOURLY_TRANSACTION_STATS_FAILURE = 'GET_HOURLY_TRANSACTION_STATS_FAILURE';\n\nexport const CLEAR_ETHEREUM_DATA = 'CLEAR_ETHEREUM_DATA';\n\nexport function fetchEtherumData() {\n    const request = axios.get(`/api/ethereum_stats`);\n    return {\n        type: FETCH_ETHEREUM_DATA,\n        payload: request\n    }    \n}\n\nexport function fetchEtherumDataSuccess(response) {\n    return {\n        type: FETCH_ETHEREUM_DATA_SUCCESS,\n        payload: response\n    }\n}\n\nexport function fetchEthereumDataFailure(error) {\n    return {\n        type: FETCH_ETHEREUM_DATA_FAILURE,\n        payload: error\n    }\n}\n\nexport function getHourlyTransactionStats() {\n    const request = axios.get('/api/hourly_transaction_stats');\n    return {\n        type: GET_HOURLY_TRANSACTION_STATS,\n        payload: request\n    }\n}\n\nexport function getHourlyTransactionStatsSuccess(response) {\n    return {\n        type: GET_HOURLY_TRANSACTION_STATS_SUCCESS,\n        payload: response\n    }\n}\n\nexport function getHourlyTransactionStatsFailure(error) {\n    return {\n        type: GET_HOURLY_TRANSACTION_STATS_FAILURE,\n        payload: error\n    }\n}\n\nexport function clearEthereumData() {\n    return {\n        type: CLEAR_ETHEREUM_DATA\n    }\n}"],"sourceRoot":""}